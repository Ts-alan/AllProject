using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using VirusBlokAda.CC.DataBase;

namespace WebConsoleTests.ARM2_dbcontrol.DataBase
{
    [TestFixture]
    public class DeviceTests
    {
        [TestCase(
            "4AAAAATo+32Oxs8BAQFQAHoAAABJAG4AdABlAGwAKABSACkAIABQAFIATwAvADEAMAAwADAAIABNAFQAIABOAGUAdAB3AG8AcgBrACAAQwBvAG4AbgBlAGMAdABpAG8AbgAAAFAAQwBJAFwAVgBFAE4AXwA4ADAAOAA2ACYARABFAFYAXwAxADAAMABGACYAUwBVAEIAUwBZAFMAXwAwADcANQAwADEANQBBAEQAJgBSAEUAVgBfADAAMQBcADQAJgBCADcAMABGADEAMQA4ACYAMAAmADAAOAA4ADgAAAA=",
            DeviceType.NET, 
            DeviceMode.Enabled,
            Result = "4AAAAAAAAAAAAAAAAQFQAHoAAABJAG4AdABlAGwAKABSACkAIABQAFIATwAvADEAMAAwADAAIABNAFQAIABOAGUAdAB3AG8AcgBrACAAQwBvAG4AbgBlAGMAdABpAG8AbgAAAFAAQwBJAFwAVgBFAE4AXwA4ADAAOAA2ACYARABFAFYAXwAxADAAMABGACYAUwBVAEIAUwBZAFMAXwAwADcANQAwADEANQBBAEQAJgBSAEUAVgBfADAAMQBcADQAJgBCADcAMABGADEAMQA4ACYAMAAmADAAOAA4ADgAAAA="
            )]
        [TestCase(
            "4AAAAATo+32Oxs8BAQFQAHoAAABJAG4AdABlAGwAKABSACkAIABQAFIATwAvADEAMAAwADAAIABNAFQAIABOAGUAdAB3AG8AcgBrACAAQwBvAG4AbgBlAGMAdABpAG8AbgAAAFAAQwBJAFwAVgBFAE4AXwA4ADAAOAA2ACYARABFAFYAXwAxADAAMABGACYAUwBVAEIAUwBZAFMAXwAwADcANQAwADEANQBBAEQAJgBSAEUAVgBfADAAMQBcADQAJgBCADcAMABGADEAMQA4ACYAMAAmADAAOAA4ADgAAAA=",
            DeviceType.NET,
            DeviceMode.Disabled,
            Result = "4AAAAAAAAAAAAAAAAAFQAHoAAABJAG4AdABlAGwAKABSACkAIABQAFIATwAvADEAMAAwADAAIABNAFQAIABOAGUAdAB3AG8AcgBrACAAQwBvAG4AbgBlAGMAdABpAG8AbgAAAFAAQwBJAFwAVgBFAE4AXwA4ADAAOAA2ACYARABFAFYAXwAxADAAMABGACYAUwBVAEIAUwBZAFMAXwAwADcANQAwADEANQBBAEQAJgBSAEUAVgBfADAAMQBcADQAJgBCADcAMABGADEAMQA4ACYAMAAmADAAOAA4ADgAAAA="
            )]
        [TestCase(
            "ngAAABxj+oCOxs8BAAEkAGQAAABSAEEAUwAgAEEAcwB5AG4AYwAgAEEAZABhAHAAdABlAHIAAABTAFcAXAB7AEUARQBBAEIANwA3ADkAMAAtAEMANQAxADQALQAxADEARAAxAC0AQgA0ADIAQgAtADAAMAA4ADAANQBGAEMAMQAyADcAMABFAH0AXABBAFMAWQBOAEMATQBBAEMAAAA=",
            DeviceType.NET,
            DeviceMode.Enabled,
            Result = "ngAAAAAAAAAAAAAAAQEkAGQAAABSAEEAUwAgAEEAcwB5AG4AYwAgAEEAZABhAHAAdABlAHIAAABTAFcAXAB7AEUARQBBAEIANwA3ADkAMAAtAEMANQAxADQALQAxADEARAAxAC0AQgA0ADIAQgAtADAAMAA4ADAANQBGAEMAMQAyADcAMABFAH0AXABBAFMAWQBOAEMATQBBAEMAAAA="
            )]
        [TestCase(
            "ngAAABxj+oCOxs8BAAEkAGQAAABSAEEAUwAgAEEAcwB5AG4AYwAgAEEAZABhAHAAdABlAHIAAABTAFcAXAB7AEUARQBBAEIANwA3ADkAMAAtAEMANQAxADQALQAxADEARAAxAC0AQgA0ADIAQgAtADAAMAA4ADAANQBGAEMAMQAyADcAMABFAH0AXABBAFMAWQBOAEMATQBBAEMAAAA=",
            DeviceType.NET,
            DeviceMode.Disabled,
            Result = "ngAAAAAAAAAAAAAAAAEkAGQAAABSAEEAUwAgAEEAcwB5AG4AYwAgAEEAZABhAHAAdABlAHIAAABTAFcAXAB7AEUARQBBAEIANwA3ADkAMAAtAEMANQAxADQALQAxADEARAAxAC0AQgA0ADIAQgAtADAAMAA4ADAANQBGAEMAMQAyADcAMABFAH0AXABBAFMAWQBOAEMATQBBAEMAAAA="
            )]
        [TestCase("", DeviceType.NET, DeviceMode.Undefined, ExpectedException = typeof(ArgumentException))]
        [TestCase("ngAAAAAAAAAAAAAAAAEkAGQAAABSAEEAUwAgAEEAcwB5AG4AYwAgAEEAZABhAHAAdABlAHIAAABTAFcAXAB7AEUARQBBAEIANw", DeviceType.NET, DeviceMode.Undefined, ExpectedException = typeof(FormatException))]
        public String PolicyProvider_ChangeDeviceMode_NET(String serial, DeviceType type, DeviceMode mode)
        {
            return DeviceManager.ChangeDeviceMode(serial, type, mode);
        }
               
    }
}
