//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfLogic.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IData")]
    public interface IData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PartInfo", ReplyAction="http://tempuri.org/IData/PartInfoResponse")]
        Crystal.DomainModel.BatchInfo PartInfo(string NPRT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetProductionNumber", ReplyAction="http://tempuri.org/IData/GetProductionNumberResponse")]
        string GetProductionNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetMonthStartDate", ReplyAction="http://tempuri.org/IData/GetMonthStartDateResponse")]
        System.DateTime GetMonthStartDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/Production", ReplyAction="http://tempuri.org/IData/ProductionResponse")]
        Crystal.DomainModel.TransistorViewModel Production();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/NzpPrib", ReplyAction="http://tempuri.org/IData/NzpPribResponse")]
        Crystal.DomainModel.NzpPribList[] NzpPrib();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/NZPFor2Plant", ReplyAction="http://tempuri.org/IData/NZPFor2PlantResponse")]
        Crystal.DomainModel.NzpPribList[] NZPFor2Plant();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetNzpPrib", ReplyAction="http://tempuri.org/IData/GetNzpPribResponse")]
        Crystal.DomainModel.NzpPrib[] GetNzpPrib(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetNZPFor2Plant", ReplyAction="http://tempuri.org/IData/GetNZPFor2PlantResponse")]
        Crystal.DomainModel.NzpPrib[] GetNZPFor2Plant(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetFromNzp", ReplyAction="http://tempuri.org/IData/GetFromNzpResponse")]
        Crystal.DomainModel.NzpBatchInfo[] GetFromNzp(string kpr, string nop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/NzpFlit", ReplyAction="http://tempuri.org/IData/NzpFlitResponse")]
        Crystal.DomainModel.NzpFLitList[] NzpFlit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetNzpFLit", ReplyAction="http://tempuri.org/IData/GetNzpFLitResponse")]
        Crystal.DomainModel.NzpFLit[] GetNzpFLit(string kpr, string kmk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetProductionSummary", ReplyAction="http://tempuri.org/IData/GetProductionSummaryResponse")]
        Crystal.DomainModel.ProductionInfoModel GetProductionSummary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetFromNzpFlit", ReplyAction="http://tempuri.org/IData/GetFromNzpFlitResponse")]
        Crystal.DomainModel.FlitOprNzp[] GetFromNzpFlit(string nfl, string kmk, string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetFromNzpFlit2", ReplyAction="http://tempuri.org/IData/GetFromNzpFlit2Response")]
        Crystal.DomainModel.FlitPartNzp[] GetFromNzpFlit2(string nop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetCycle", ReplyAction="http://tempuri.org/IData/GetCycleResponse")]
        Crystal.DomainModel.CycleInfo[] GetCycle(string fdate, string sdate, string indnumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/ShowDefects", ReplyAction="http://tempuri.org/IData/ShowDefectsResponse")]
        Crystal.DomainModel.CyclesDefectsInfo[] ShowDefects(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/ShowGodn", ReplyAction="http://tempuri.org/IData/ShowGodnResponse")]
        Crystal.DomainModel.cycle_period[] ShowGodn(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetEquipmentLoads", ReplyAction="http://tempuri.org/IData/GetEquipmentLoadsResponse")]
        Crystal.DomainModel.EquipmentLoad[] GetEquipmentLoads(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PribKplsForDay", ReplyAction="http://tempuri.org/IData/PribKplsForDayResponse")]
        Crystal.DomainModel.PribKplsForDay[] PribKplsForDay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GangPribKplsForDay", ReplyAction="http://tempuri.org/IData/GangPribKplsForDayResponse")]
        Crystal.DomainModel.GangPribKplsForDay[] GangPribKplsForDay(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PribKplsForMonth", ReplyAction="http://tempuri.org/IData/PribKplsForMonthResponse")]
        Crystal.DomainModel.PribKplsForMonth[] PribKplsForMonth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/DefectsDistr", ReplyAction="http://tempuri.org/IData/DefectsDistrResponse")]
        Crystal.DomainModel.DefectsDistributionPrib[] DefectsDistr(string fdate, string sdate, string indnumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/DefectsDistrOperations", ReplyAction="http://tempuri.org/IData/DefectsDistrOperationsResponse")]
        Crystal.DomainModel.DefectsDistributionOperations[] DefectsDistrOperations(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/DefectsDistrData", ReplyAction="http://tempuri.org/IData/DefectsDistrDataResponse")]
        Crystal.DomainModel.DefDistrData[] DefectsDistrData(string nop, string kpr, string kmk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/DefectsDistrFor2Plant", ReplyAction="http://tempuri.org/IData/DefectsDistrFor2PlantResponse")]
        Crystal.DomainModel.DefectsDistributionPrib[] DefectsDistrFor2Plant(string fdate, string sdate, string head);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/DefectsDistrOperationsFor2Plant", ReplyAction="http://tempuri.org/IData/DefectsDistrOperationsFor2PlantResponse")]
        Crystal.DomainModel.DefectsDistributionOperations[] DefectsDistrOperationsFor2Plant(string kpr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetEquipmentDetail", ReplyAction="http://tempuri.org/IData/GetEquipmentDetailResponse")]
        Crystal.DomainModel.EquipmentDetailModel GetEquipmentDetail(string techGroupCode, string equipmentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/SearchRes", ReplyAction="http://tempuri.org/IData/SearchResResponse")]
        string[] SearchRes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PrtSearch", ReplyAction="http://tempuri.org/IData/PrtSearchResponse")]
        Crystal.DomainModel.PartSearch[] PrtSearch(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/Downtimes", ReplyAction="http://tempuri.org/IData/DowntimesResponse")]
        Crystal.DomainModel.Downtimes[] Downtimes(string KGT, string KUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetTrackedDevicesDetail", ReplyAction="http://tempuri.org/IData/GetTrackedDevicesDetailResponse")]
        Crystal.DomainModel.ObservedDevice[] GetTrackedDevicesDetail(Crystal.DomainModel.TrackedDevice[] devices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetTrackedBatchesDetail", ReplyAction="http://tempuri.org/IData/GetTrackedBatchesDetailResponse")]
        Crystal.DomainModel.ObservedBatch[] GetTrackedBatchesDetail(Crystal.DomainModel.TrackedBatch[] batches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PribMonthReport", ReplyAction="http://tempuri.org/IData/PribMonthReportResponse")]
        Crystal.DomainModel.SimplePribList[] PribMonthReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetDataBySelectedPrib", ReplyAction="http://tempuri.org/IData/GetDataBySelectedPribResponse")]
        Crystal.DomainModel.MonthReportData[] GetDataBySelectedPrib(string selPrib);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/PribMonthRepordBrak", ReplyAction="http://tempuri.org/IData/PribMonthRepordBrakResponse")]
        Crystal.DomainModel.MonthReportDataBrak[] PribMonthRepordBrak(string nop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetPrib", ReplyAction="http://tempuri.org/IData/GetPribResponse")]
        Crystal.DomainModel.Approaching[] GetPrib(string techGroupCode, string equipmentCode, int Depth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetAnalysis", ReplyAction="http://tempuri.org/IData/GetAnalysisResponse")]
        Crystal.DomainModel.GetAnalysis1[] GetAnalysis(string fdate, string sdate, string indnumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetAnalysisDiag", ReplyAction="http://tempuri.org/IData/GetAnalysisDiagResponse")]
        Crystal.DomainModel.GetAnalysisDiag[] GetAnalysisDiag(string[] kpr, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetParetoData", ReplyAction="http://tempuri.org/IData/GetParetoDataResponse")]
        Crystal.DomainModel.ParetoData GetParetoData(string fdate, string sdate, string indnumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/GetParetoDiag", ReplyAction="http://tempuri.org/IData/GetParetoDiagResponse")]
        Crystal.DomainModel.ParetoDiag[] GetParetoDiag(string[] kpr, string[] kuch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/LdPlotByDate", ReplyAction="http://tempuri.org/IData/LdPlotByDateResponse")]
        Crystal.DomainModel.LdPlot[] LdPlotByDate(string fdate, string sdate, string indnumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/AreaNzp", ReplyAction="http://tempuri.org/IData/AreaNzpResponse")]
        Crystal.DomainModel.NzpUch[] AreaNzp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/MZagrBrig", ReplyAction="http://tempuri.org/IData/MZagrBrigResponse")]
        Crystal.DomainModel.LoadMth[] MZagrBrig(System.DateTime fdate, System.DateTime sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/StandEquipment", ReplyAction="http://tempuri.org/IData/StandEquipmentResponse")]
        Crystal.DomainModel.StandEquipment[] StandEquipment();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataChannel : WcfLogic.ServiceReference1.IData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataClient : System.ServiceModel.ClientBase<WcfLogic.ServiceReference1.IData>, WcfLogic.ServiceReference1.IData {
        
        public DataClient() {
        }
        
        public DataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Crystal.DomainModel.BatchInfo PartInfo(string NPRT) {
            return base.Channel.PartInfo(NPRT);
        }
        
        public string GetProductionNumber() {
            return base.Channel.GetProductionNumber();
        }
        
        public System.DateTime GetMonthStartDate() {
            return base.Channel.GetMonthStartDate();
        }
        
        public Crystal.DomainModel.TransistorViewModel Production() {
            return base.Channel.Production();
        }
        
        public Crystal.DomainModel.NzpPribList[] NzpPrib() {
            return base.Channel.NzpPrib();
        }
        
        public Crystal.DomainModel.NzpPribList[] NZPFor2Plant() {
            return base.Channel.NZPFor2Plant();
        }
        
        public Crystal.DomainModel.NzpPrib[] GetNzpPrib(string kpr) {
            return base.Channel.GetNzpPrib(kpr);
        }
        
        public Crystal.DomainModel.NzpPrib[] GetNZPFor2Plant(string kpr) {
            return base.Channel.GetNZPFor2Plant(kpr);
        }
        
        public Crystal.DomainModel.NzpBatchInfo[] GetFromNzp(string kpr, string nop) {
            return base.Channel.GetFromNzp(kpr, nop);
        }
        
        public Crystal.DomainModel.NzpFLitList[] NzpFlit() {
            return base.Channel.NzpFlit();
        }
        
        public Crystal.DomainModel.NzpFLit[] GetNzpFLit(string kpr, string kmk) {
            return base.Channel.GetNzpFLit(kpr, kmk);
        }
        
        public Crystal.DomainModel.ProductionInfoModel GetProductionSummary() {
            return base.Channel.GetProductionSummary();
        }
        
        public Crystal.DomainModel.FlitOprNzp[] GetFromNzpFlit(string nfl, string kmk, string kpr) {
            return base.Channel.GetFromNzpFlit(nfl, kmk, kpr);
        }
        
        public Crystal.DomainModel.FlitPartNzp[] GetFromNzpFlit2(string nop) {
            return base.Channel.GetFromNzpFlit2(nop);
        }
        
        public Crystal.DomainModel.CycleInfo[] GetCycle(string fdate, string sdate, string indnumb) {
            return base.Channel.GetCycle(fdate, sdate, indnumb);
        }
        
        public Crystal.DomainModel.CyclesDefectsInfo[] ShowDefects(string kpr) {
            return base.Channel.ShowDefects(kpr);
        }
        
        public Crystal.DomainModel.cycle_period[] ShowGodn(string kpr) {
            return base.Channel.ShowGodn(kpr);
        }
        
        public Crystal.DomainModel.EquipmentLoad[] GetEquipmentLoads(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetEquipmentLoads(startDate, endDate);
        }
        
        public Crystal.DomainModel.PribKplsForDay[] PribKplsForDay() {
            return base.Channel.PribKplsForDay();
        }
        
        public Crystal.DomainModel.GangPribKplsForDay[] GangPribKplsForDay(string kpr) {
            return base.Channel.GangPribKplsForDay(kpr);
        }
        
        public Crystal.DomainModel.PribKplsForMonth[] PribKplsForMonth() {
            return base.Channel.PribKplsForMonth();
        }
        
        public Crystal.DomainModel.DefectsDistributionPrib[] DefectsDistr(string fdate, string sdate, string indnumb) {
            return base.Channel.DefectsDistr(fdate, sdate, indnumb);
        }
        
        public Crystal.DomainModel.DefectsDistributionOperations[] DefectsDistrOperations(string kpr) {
            return base.Channel.DefectsDistrOperations(kpr);
        }
        
        public Crystal.DomainModel.DefDistrData[] DefectsDistrData(string nop, string kpr, string kmk) {
            return base.Channel.DefectsDistrData(nop, kpr, kmk);
        }
        
        public Crystal.DomainModel.DefectsDistributionPrib[] DefectsDistrFor2Plant(string fdate, string sdate, string head) {
            return base.Channel.DefectsDistrFor2Plant(fdate, sdate, head);
        }
        
        public Crystal.DomainModel.DefectsDistributionOperations[] DefectsDistrOperationsFor2Plant(string kpr) {
            return base.Channel.DefectsDistrOperationsFor2Plant(kpr);
        }
        
        public Crystal.DomainModel.EquipmentDetailModel GetEquipmentDetail(string techGroupCode, string equipmentCode) {
            return base.Channel.GetEquipmentDetail(techGroupCode, equipmentCode);
        }
        
        public string[] SearchRes(string query) {
            return base.Channel.SearchRes(query);
        }
        
        public Crystal.DomainModel.PartSearch[] PrtSearch(string query) {
            return base.Channel.PrtSearch(query);
        }
        
        public Crystal.DomainModel.Downtimes[] Downtimes(string KGT, string KUS) {
            return base.Channel.Downtimes(KGT, KUS);
        }
        
        public Crystal.DomainModel.ObservedDevice[] GetTrackedDevicesDetail(Crystal.DomainModel.TrackedDevice[] devices) {
            return base.Channel.GetTrackedDevicesDetail(devices);
        }
        
        public Crystal.DomainModel.ObservedBatch[] GetTrackedBatchesDetail(Crystal.DomainModel.TrackedBatch[] batches) {
            return base.Channel.GetTrackedBatchesDetail(batches);
        }
        
        public Crystal.DomainModel.SimplePribList[] PribMonthReport() {
            return base.Channel.PribMonthReport();
        }
        
        public Crystal.DomainModel.MonthReportData[] GetDataBySelectedPrib(string selPrib) {
            return base.Channel.GetDataBySelectedPrib(selPrib);
        }
        
        public Crystal.DomainModel.MonthReportDataBrak[] PribMonthRepordBrak(string nop) {
            return base.Channel.PribMonthRepordBrak(nop);
        }
        
        public Crystal.DomainModel.Approaching[] GetPrib(string techGroupCode, string equipmentCode, int Depth) {
            return base.Channel.GetPrib(techGroupCode, equipmentCode, Depth);
        }
        
        public Crystal.DomainModel.GetAnalysis1[] GetAnalysis(string fdate, string sdate, string indnumb) {
            return base.Channel.GetAnalysis(fdate, sdate, indnumb);
        }
        
        public Crystal.DomainModel.GetAnalysisDiag[] GetAnalysisDiag(string[] kpr, string input) {
            return base.Channel.GetAnalysisDiag(kpr, input);
        }
        
        public Crystal.DomainModel.ParetoData GetParetoData(string fdate, string sdate, string indnumb) {
            return base.Channel.GetParetoData(fdate, sdate, indnumb);
        }
        
        public Crystal.DomainModel.ParetoDiag[] GetParetoDiag(string[] kpr, string[] kuch) {
            return base.Channel.GetParetoDiag(kpr, kuch);
        }
        
        public Crystal.DomainModel.LdPlot[] LdPlotByDate(string fdate, string sdate, string indnumb) {
            return base.Channel.LdPlotByDate(fdate, sdate, indnumb);
        }
        
        public Crystal.DomainModel.NzpUch[] AreaNzp() {
            return base.Channel.AreaNzp();
        }
        
        public Crystal.DomainModel.LoadMth[] MZagrBrig(System.DateTime fdate, System.DateTime sdate) {
            return base.Channel.MZagrBrig(fdate, sdate);
        }
        
        public Crystal.DomainModel.StandEquipment[] StandEquipment() {
            return base.Channel.StandEquipment();
        }
    }
}
