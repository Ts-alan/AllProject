//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IMRPProviderSvcWrap")]
public interface IMRPProviderSvcWrap
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMRPProviderSvcWrap/IsUserInRole", ReplyAction = "http://tempuri.org/IMRPProviderSvcWrap/IsUserInRoleResponse")]
    bool IsUserInRole(string userName, string roleName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMRPProviderSvcWrap/GetUserKeyHashCode", ReplyAction = "http://tempuri.org/IMRPProviderSvcWrap/GetUserKeyHashCodeResponse")]
    int GetUserKeyHashCode(string userName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMRPProviderSvcWrap/GetRolesForUser", ReplyAction = "http://tempuri.org/IMRPProviderSvcWrap/GetRolesForUserResponse")]
    string[] GetRolesForUser(string userName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMRPProviderSvcWrap/GetUserProfileProperty", ReplyAction = "http://tempuri.org/IMRPProviderSvcWrap/GetUserProfilePropertyResponse")]
    string GetUserProfileProperty(string userName, string propertyName);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMRPProviderSvcWrapChannel : IMRPProviderSvcWrap, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MRPProviderSvcWrapClient : System.ServiceModel.ClientBase<IMRPProviderSvcWrap>, IMRPProviderSvcWrap
{

    public MRPProviderSvcWrapClient()
    {
    }

    public MRPProviderSvcWrapClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
    {
    }

    public MRPProviderSvcWrapClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public MRPProviderSvcWrapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public MRPProviderSvcWrapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
    {
    }

    public bool IsUserInRole(string userName, string roleName)
    {
        return base.Channel.IsUserInRole(userName, roleName);
    }

    public int GetUserKeyHashCode(string userName)
    {
        return base.Channel.GetUserKeyHashCode(userName);
    }

    public string[] GetRolesForUser(string userName)
    {
        return base.Channel.GetRolesForUser(userName);
    }

    public string GetUserProfileProperty(string userName, string propertyName)
    {
        return base.Channel.GetUserProfileProperty(userName, propertyName);
    }
}
